/*
 * generated by Xtext 2.12.0
 */
package de.fhdo.lemma.technology.mappingdsl.formatting2

import com.google.inject.Inject
import de.fhdo.lemma.formatting2.ServiceDslFormatter
import de.fhdo.lemma.service.Import
import de.fhdo.lemma.technology.mapping.MicroserviceMapping
import de.fhdo.lemma.technology.mapping.TechnologyMapping
import de.fhdo.lemma.technology.mappingdsl.services.MappingDslGrammarAccess
import org.eclipse.xtext.formatting2.IFormattableDocument

class MappingDslFormatter extends ServiceDslFormatter {

    @Inject extension MappingDslGrammarAccess

    def dispatch void format(TechnologyMapping technologyMapping, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        for (Import _import : technologyMapping.getImports()) {
            _import.format;
        }
        for (MicroserviceMapping microserviceMapping : technologyMapping.getServiceMappings()) {
            microserviceMapping.format;
        }
    }

    def dispatch void format(MicroserviceMapping microserviceMapping, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        microserviceMapping.getMicroservice.format;
    }

    // TODO: implement for
}
